apiVersion: batch/v1
kind: CronJob
metadata:
  name: nextcloud-backup
  namespace: nextcloud
  labels:
    app: nextcloud-backup
spec:
  schedule: "30 6 * * *"
  concurrencyPolicy: Forbid
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 3
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: OnFailure
          imagePullSecrets:
          - name: gitea-registry
          serviceAccountName: nextcloud-backup-sa
          containers:
          - name: nextcloud-backup
            image: gitea.mesh.rigsb.net/eric/backup-runner:latest
            env:
            - name: RESTIC_CACHE_DIR
              value: "/tmp"
            - name: RESTIC_PASSWORD_FILE
              value: "/etc/restic-secret/password"
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: nextcloud-db
                  key: db-password
            command:
            - /bin/bash
            - -c
            - |
              set -euo pipefail
              
              source /scripts/backup-service.sh
              mkdir -p /backup-temp
              
              # Simplified pre-backup function
              nextcloud_pre_backup() {
                echo "Enabling Nextcloud maintenance mode..."
                kubectl exec -n nextcloud deployment/nextcloud -- php occ maintenance:mode --on
                
                echo "Creating database dump..."
                kubectl exec -n postgresql deployment/postgresql -- \
                  env PGPASSWORD="$PGPASSWORD" pg_dump -U postgres nextcloud > /backup-temp/nextcloud-db-$(date +%Y%m%d-%H%M%S).sql
              }
              
              # Simplified post-backup function  
              nextcloud_post_backup() {
                echo "Disabling Nextcloud maintenance mode..."
                kubectl exec -n nextcloud deployment/nextcloud -- php occ maintenance:mode --off
                rm -f /backup-temp/nextcloud-db-*.sql
              }

              backup_service "Nextcloud" "/backup/k8s-nextcloud" "/var/www/html/data /var/www/html/config/config.php /var/www/html/custom_apps /backup-temp" "nextcloud_pre_backup" "nextcloud_post_backup"
            volumeMounts:
            - name: nextcloud-data
              mountPath: /var/www/html
              readOnly: true
            - name: restic-secret
              mountPath: /etc/restic-secret
              readOnly: true
            - name: backup-storage
              mountPath: /backup
            - name: backup-temp
              mountPath: /backup-temp
            - name: backup-scripts
              mountPath: /scripts
            resources:
              requests:
                cpu: 100m
                memory: 256Mi
              limits:
                cpu: 300m
                memory: 512Mi
          securityContext:
            runAsUser: 33
            runAsGroup: 33
            fsGroup: 0
          volumes:
          - name: nextcloud-data
            persistentVolumeClaim:
              claimName: nextcloud-pvc
          - name: restic-secret
            secret:
              secretName: restic-secret
          - name: backup-storage
            nfs:
              server: 10.0.4.8
              path: /mnt/backup
          - name: backup-temp
            emptyDir: {}
          - name: backup-scripts
            configMap:
              name: backup-scripts
              defaultMode: 0755
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: nextcloud-backup-sa
  namespace: nextcloud
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: nextcloud-backup-role
  namespace: nextcloud
rules:
- apiGroups: ["apps"]
  resources: ["deployments"]
  verbs: ["get"]
- apiGroups: [""]
  resources: ["pods", "pods/exec"]
  verbs: ["get", "list", "create"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: nextcloud-backup-binding
  namespace: nextcloud
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: nextcloud-backup-role
subjects:
- kind: ServiceAccount
  name: nextcloud-backup-sa
  namespace: nextcloud
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: nextcloud-backup-cluster-role
rules:
- apiGroups: ["apps"]
  resources: ["deployments"]
  verbs: ["get"]
- apiGroups: [""]
  resources: ["pods", "pods/exec"]
  verbs: ["get", "list", "create"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: nextcloud-backup-cluster-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: nextcloud-backup-cluster-role
subjects:
- kind: ServiceAccount
  name: nextcloud-backup-sa
  namespace: nextcloud
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: backup-secrets-reader
  namespace: nextcloud
rules:
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: nextcloud-backup-secrets-binding
  namespace: nextcloud
subjects:
- kind: ServiceAccount
  name: nextcloud-backup-sa
  namespace: nextcloud
roleRef:
  kind: Role
  name: backup-secrets-reader
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: nextcloud-backup-pg-role
  namespace: postgresql
rules:
- apiGroups: [""]
  resources: ["pods", "pods/exec"]
  verbs: ["get", "list", "create", "update", "patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: nextcloud-backup-pg-binding
  namespace: postgresql
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: nextcloud-backup-pg-role
subjects:
- kind: ServiceAccount
  name: nextcloud-backup-sa
  namespace: nextcloud