name: Destroy Talos Cluster

on:
  workflow_dispatch: {}

env:
  TF_LOG: ERROR
  TF_WORKSPACE: terraform-gitea-actions
  TF_VAR_pm_api_url: ${{ vars.PM_API_URL }}
  TF_VAR_pm_api_token_id: ${{ secrets.PM_API_TOKEN_ID }}
  TF_VAR_pm_api_token_secret: ${{ secrets.PM_API_TOKEN_SECRET }}
  TF_VAR_guest_root_password: ${{ secrets.GUEST_ROOT_PASSWORD }}
  TF_VAR_pve_infra_ssh_key: ${{ secrets.PVE_INFRA_SSH_KEY }}
  TF_VAR_pve_infra_ssh_public_key: ${{ secrets.PVE_INFRA_SSH_PUBLIC_KEY }}
  GUEST_USER: ${{ vars.GUEST_USER }}
  GUEST_USER_PASSWORD: ${{ secrets.GUEST_USER_PASSWORD }}
  GUEST_USER_PUBLIC_KEY: ${{ secrets.GUEST_USER_PUBLIC_KEY }}
  NORDVPN_AUTH_TOKEN: ${{ secrets.NORDVPN_AUTH_TOKEN }}

jobs:
  destroy-talos-cluster:
    name: Destroy Talos Cluster
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: |
          cd ./terraform
          terraform init \
            -backend-config='endpoints={s3="${{ vars.MINIO_ENDPOINT_URL }}"}' \
            -backend-config="access_key=${{ secrets.MINIO_ACCESS_KEY  }}" \
            -backend-config="secret_key=${{ secrets.MINIO_ACCESS_KEY_SECRET  }}" \
            -backend-config="bucket=tf-state-pve" \
            -backend-config="key=tf-state-pve.tfstate" \
            -backend-config="region=main" \
            -backend-config="skip_requesting_account_id=true" \
            -backend-config="skip_credentials_validation=true" \
            -backend-config="skip_metadata_api_check=true" \
            -backend-config="skip_region_validation=true" \
            -backend-config="use_path_style=true" \
            -input=false

      - name: Terraform Validate
        run: |
          cd ./terraform
          terraform validate

      - name: Terraform Destroy
        run: |
          cd ./terraform
          terraform destroy -target=module.talos_cluster --auto-approve